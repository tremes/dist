<?xml version="1.0"?>
<project name="DistributionBuilder" default="dist" basedir="." xmlns:artifact="urn:maven-artifact-ant">

   <property name="parent.dir" location="${ant.file.DistributionBuilder}/../../" />

   <path id="maven-ant-tasks.classpath" path="${parent.dir}/lib/maven-ant-tasks.jar" />
   <typedef resource="org/apache/maven/artifact/ant/antlib.xml" uri="urn:maven-artifact-ant" classpathref="maven-ant-tasks.classpath" />

   <property environment="env" />
   <property name="maven.dir" location="${env.M2_HOME}" />

   <target name="weld.dir.input" unless="weld.dir">
      <input message="Path to Weld Core source directory" addproperty="weld.dir" />
   </target>

   <target name="weld.version.input" unless="weld.version">
      <input message="Weld Core Version (used to locate built Weld jars)" addproperty="weld.version" />
   </target>

   <target name="setup" depends="weld.dir.input, weld.version.input">
      <fail unless="weld.dir" message="You must specify the weld directory with -Dweld.dir=~/workspace/weld" />
      <fail unless="weld.version" message="You must specify the weld.version as a property" />
      <fail unless="env.M2_HOME" message="You must set M2_HOME properly" />
      
      <property name="examples.dir" value="${weld.dir}/examples" />
      <property name="refdoc.dir" value="${weld.dir}/docs/reference" />
      <property name="final.name" value="weld-${weld.version}" />
      <property name="dist.dir" value="${basedir}/${final.name}" />
      <property name="dist.weld.lib.dir" value="${dist.dir}/artifacts/weld" />
      <property name="dist.cdi.lib.dir" value="${dist.dir}/artifacts/cdi" />
      <property name="dist.doc.dir" value="${dist.dir}/doc" />
      <property name="dist.apidocs.dir" value="${dist.dir}/doc/apidocs/cdi" />

      <echo message="Using ${weld.dir} as Weld Core source directory" />
      <echo message="Using ${weld.version} as Weld Core version" />

      <echo message="Running mvn clean on ${weld.dir}" />
      <!-- Make sure there are no random bits of build crap that get copied in! -->
      <maven target="clean" basedir="${weld.dir}">
         <arg line="-Pupdate-jboss-as,examples,bundles,docs" />
      </maven>
      <maven target="eclipse:clean" basedir="${weld.dir}">
         <arg line="-Pupdate-jboss-as,examples,bundles,docs" />
      </maven>

      <delete dir="${dist.dir}" failonerror="false" />
      <delete file="${final.name}.zip" failonerror="false" />
      <mkdir dir="${dist.dir}" />
   </target>

   <target name="dist" description="Build the distribution" depends="setup, docs">

      <copy todir="${dist.dir}">
         <fileset dir="${basedir}">
            <include name="readme.txt" />
            <include name="LICENSE.txt" />
         </fileset>
      </copy>

      <mkdir dir="${dist.dir}/examples" />
      <copy todir="${dist.dir}/examples">
         <fileset dir="${examples.dir}" />
      </copy>

      <artifact:dependencies filesetId="weld.fileset" versionsId="weld.versions" sourcesfilesetid="weld.sources.fileset" javadocfilesetid="weld.javadocs.fileset">
         <dependency groupId="org.jboss.weld" artifactId="weld-core" version="${weld.version}" />
         <dependency groupId="org.jboss.weld.se" artifactId="weld-se-core" version="${weld.version}" />
         <dependency groupId="org.jboss.weld.se" artifactId="weld-se-shaded" version="${weld.version}" />
         <dependency groupId="org.jboss.weld.servlet" artifactId="weld-servlet-core" version="${weld.version}" />
         <dependency groupId="org.jboss.weld.servlet" artifactId="weld-servlet-shaded" version="${weld.version}" />
         <remoteRepository id="repository.jboss.org" url="https://repository.jboss.org/nexus/content/groups/public/" />
      </artifact:dependencies>

      <delete dir="target" failonerror="false" />
      <mkdir dir="target" />
      <copy todir="target">
         <fileset refid="weld.fileset" />
         <fileset refid="weld.sources.fileset" />
         <fileset refid="weld.javadocs.fileset" />
         <chainedmapper>
            <mapper classpathref="maven-ant-tasks.classpath" classname="org.apache.maven.artifact.ant.VersionMapper" from="${weld.versions}" to="flatten" />
            <flattenmapper />
         </chainedmapper>
      </copy>

      <mkdir dir="${dist.apidocs.dir}" />
      <unzip dest="${dist.apidocs.dir}">
         <fileset dir="target">
            <include name="cdi-api-javadoc.jar" />
         </fileset>
      </unzip>

      <mkdir dir="${dist.weld.lib.dir}" />

      <copy todir="${dist.weld.lib.dir}">
         <fileset dir="target">
            <include name="weld-*.jar" />
         </fileset>
      </copy>

      <mkdir dir="${dist.cdi.lib.dir}" />

      <copy todir="${dist.cdi.lib.dir}">
         <fileset dir="target">
            <include name="cdi-api*.jar" />
         </fileset>
      </copy>

      <delete dir="target" failonerror="false" />

      <zip destfile="${final.name}.zip">
         <fileset dir="${basedir}">
            <include name="${final.name}/**" />
         </fileset>
      </zip>

      <!-- Clean up after ourselves -->
      <maven target="clean" basedir="${weld.dir}">
         <arg line="-Pupdate-jboss-as,examples,bundles,docs" />
      </maven>
   </target>

   <target name="deploy-dist">
      <fail unless="weld.version" message="You must specify the weld.version as a property" />
      <maven target="deploy:deploy-file" basedir="${basedir}">
         <arg line="-DpomFile=${basedir}/pom.xml" />
         <arg line="-Dpackaging=zip" />
         <arg line="-Dversion=${weld.version}" />
         <arg line="-Dfile=${basedir}/weld-${weld.version}.zip" />
         <arg line="-Durl=http://oss.sonatype.org/content/repositories/snapshots/" />
         <arg line="-DrepositoryId=oss.sonatype.org/jboss-snapshots" />
         <arg line="-DuniqueVersion=false" />
      </maven>
   </target>

   <target name="docs">
      <echo message="Building reference guide from ${refdoc.dir} " />
      <maven target="jdocbook:translate compile" basedir="${refdoc.dir}" />
      <mkdir dir="${dist.doc.dir}" />
      <copy todir="${dist.doc.dir}">
         <fileset dir="${refdoc.dir}/target/docbook/publish">
            <include name="de-DE/**/*" />
            <include name="en-US/**/*" />
            <include name="es-ES/**/*" />
            <include name="ko-KR/**/*" />
            <include name="it-IT/**/*" />
            <include name="pt-BR/**/*" />
            <include name="zh-CN/**/*" />
            <include name="zh-TW/**/*" />
         </fileset>
      </copy>
   </target>

   <macrodef name="maven">
      <attribute name="target" />
      <attribute name="basedir" />
      <element name="args" implicit="true" optional="true" />
      <sequential>
         <java classname="org.codehaus.classworlds.Launcher" fork="true" dir="@{basedir}" maxmemory="512m" failonerror="true">
            <classpath>
               <fileset dir="${maven.dir}/boot">
                  <include name="*.jar" />
               </fileset>
               <fileset dir="${maven.dir}/bin">
                  <include name="*.*" />
               </fileset>
            </classpath>
            <jvmarg line="-Xms128m -Xmx512m -XX:MaxPermSize=128m" />
            <sysproperty key="classworlds.conf" value="${maven.dir}/bin/m2.conf" />
            <sysproperty key="maven.home" value="${maven.dir}" />
            <args />
            <arg line="@{target}" />
         </java>
      </sequential>
   </macrodef>

</project>
